apply from: rootProject.file('gradle/versioning.gradle')

buildscript {
  ext.kotlin_version = '2.0.21'
  repositories {
    gradlePluginPortal()
    google()
    mavenCentral()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }

  dependencies {
    classpath 'tech.medivh.plugin.publisher:tech.medivh.plugin.publisher.gradle.plugin:1.2.5'
    classpath 'com.android.tools.build:gradle:8.8.2'
    classpath 'com.diffplug.spotless:spotless-plugin-gradle:7.0.4'
    classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:4.0.0'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
  }
}

allprojects {
  buildscript {
    repositories {
      google()
      mavenCentral()
    }
  }

  apply plugin: 'idea'

  repositories {
    gradlePluginPortal()
    google()
    mavenCentral()
  }

  group = GROUP
  version = getVersionName()
}

// Updated Java compatibility check
if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc).tap {
      configureEach {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
  }
}

def isCI = "true".equals(System.getenv("CIRCLECI"))
def preDexEnabled = "true".equals(System.getProperty("preDex", "true"))

ext {
  versionCode = Integer.parseInt(VERSION_CODE)
  versionName = getVersionName()

  minSdkVersion = 21
  minSdkVersionWear = 25
  targetSdkVersion = 35
  compileSdkVersion = 35

  sourceCompatibilityVersion = JavaVersion.VERSION_17
  targetCompatibilityVersion = JavaVersion.VERSION_17

  preDexLibraries = preDexEnabled && !isCI
}

ext.deps = [
  supportAnnotations: 'androidx.annotation:annotation:1.7.1'
]

apply plugin: 'com.diffplug.spotless'
apply from: rootProject.file('gradle/promote.gradle')